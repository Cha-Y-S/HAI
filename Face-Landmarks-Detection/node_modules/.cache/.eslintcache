[{"C:\\Users\\jobgs\\face-landmarks-detection\\src\\index.js":"1","C:\\Users\\jobgs\\face-landmarks-detection\\src\\App.js":"2","C:\\Users\\jobgs\\face-landmarks-detection\\src\\reportWebVitals.js":"3","C:\\Users\\jobgs\\face-landmarks-detection\\src\\utilities.js":"4"},{"size":500,"mtime":1615972630989,"results":"5","hashOfConfig":"6"},{"size":2623,"mtime":1616121035195,"results":"7","hashOfConfig":"6"},{"size":362,"mtime":1615972630989,"results":"8","hashOfConfig":"6"},{"size":27239,"mtime":1616121097798,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"4j3v29",{"filePath":"13","messages":"14","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"15"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\jobgs\\face-landmarks-detection\\src\\index.js",[],["20","21"],"C:\\Users\\jobgs\\face-landmarks-detection\\src\\App.js",["22","23"],"// 여러 가지 참조 가능. canvas components, Webcam\nimport React, { useRef, useEffect } from \"react\";\nimport \"./App.css\";\nimport * as tf from \"@tensorflow/tfjs\";\nimport * as facemesh from \"@tensorflow-models/face-landmarks-detection\";\nimport Webcam from \"react-webcam\";\nimport { drawMesh } from \"./utilities\";\n\nfunction App() {\n  const webcamRef = useRef(null);\n  const canvasRef = useRef(null);\n\n  \n  // tensorflow.js에서 model을 load\n  const runFacemesh = async () => {\n    const net = await facemesh.load(facemesh.SupportedPackages.mediapipeFacemesh);\n    // detect fucntion 호출\n    // 10ms마다 detect function 실행\n    setInterval(() => {\n      detect(net);\n    }, 10);\n  };\n\n  // Detect function 정의\n  const detect = async (net) => {\n    // webcam이 설정되었는지 확인하는 조건문\n    if (\n      typeof webcamRef.current !== \"undefined\" &&\n      webcamRef.current !== null &&\n      webcamRef.current.video.readyState === 4\n    ) {\n      // Get Video Properties\n      const video = webcamRef.current.video;\n      const videoWidth = webcamRef.current.video.videoWidth;\n      const videoHeight = webcamRef.current.video.videoHeight;\n\n      // Set video width\n      webcamRef.current.video.width = videoWidth;\n      webcamRef.current.video.height = videoHeight;\n\n      // Set canvas width\n      canvasRef.current.width = videoWidth;\n      canvasRef.current.height = videoHeight;\n\n      // Make Detections\n       // webcam으로 부터 받은 video 정보를 인자로 넘긴다.\n      const face = await net.estimateFaces({input:video});\n      console.log(face);\n\n      // Get canvas context\n      // 얼굴에 선과 점을 그린다.\n      const ctx = canvasRef.current.getContext(\"2d\");\n      requestAnimationFrame(()=>{drawMesh(face, ctx)});\n    }\n  };\n\n  useEffect(()=>{runFacemesh()}, []);\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <Webcam\n          ref={webcamRef}\n          style={{\n            position: \"absolute\",\n            marginLeft: \"auto\",\n            marginRight: \"auto\",\n            left: 0,\n            right: 0,\n            textAlign: \"center\",\n            zindex: 9,\n            width: 640,\n            height: 480,\n          }}\n        />\n\n        <canvas\n          ref={canvasRef}\n          style={{\n            position: \"absolute\",\n            marginLeft: \"auto\",\n            marginRight: \"auto\",\n            left: 0,\n            right: 0,\n            textAlign: \"center\",\n            zindex: 9,\n            width: 640,\n            height: 480,\n          }}\n        />\n      </header>\n    </div>\n  );\n}\n\nexport default App;","C:\\Users\\jobgs\\face-landmarks-detection\\src\\reportWebVitals.js",[],"C:\\Users\\jobgs\\face-landmarks-detection\\src\\utilities.js",[],{"ruleId":"24","replacedBy":"25"},{"ruleId":"26","replacedBy":"27"},{"ruleId":"28","severity":1,"message":"29","line":4,"column":13,"nodeType":"30","messageId":"31","endLine":4,"endColumn":15},{"ruleId":"32","severity":1,"message":"33","line":57,"column":34,"nodeType":"34","endLine":57,"endColumn":36,"suggestions":"35"},"no-native-reassign",["36"],"no-negated-in-lhs",["37"],"no-unused-vars","'tf' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'runFacemesh'. Either include it or remove the dependency array.","ArrayExpression",["38"],"no-global-assign","no-unsafe-negation",{"desc":"39","fix":"40"},"Update the dependencies array to be: [runFacemesh]",{"range":"41","text":"42"},[1707,1709],"[runFacemesh]"]