{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jobgs\\\\face-landmarks-detection\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\n// 여러 가지 참조 가능. canvas components, Webcam\nimport React, { useRef, useEffect } from \"react\";\nimport \"./App.css\";\nimport * as tf from \"@tensorflow/tfjs\";\nimport * as facemesh from \"@tensorflow-models/face-landmarks-detection\";\nimport Webcam from \"react-webcam\";\nimport { drawMesh } from \"./utilities\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const webcamRef = useRef(null);\n  const canvasRef = useRef(null); // tensorflow.js에서 model을 load\n\n  const runFacemesh = async () => {\n    const net = await facemesh.load(facemesh.SupportedPackages.mediapipeFacemesh); // detect fucntion 호출\n    // 10ms마다 detect function 실행\n\n    setInterval(() => {\n      detect(net);\n    }, 10);\n  }; // Detect function 정의\n\n\n  const detect = async net => {\n    // webcam이 설정되었는지 확인하는 조건문\n    if (typeof webcamRef.current !== \"undefined\" && webcamRef.current !== null && webcamRef.current.video.readyState === 4) {\n      // Get Video Properties\n      const video = webcamRef.current.video;\n      const videoWidth = webcamRef.current.video.videoWidth;\n      const videoHeight = webcamRef.current.video.videoHeight; // Set video width\n\n      webcamRef.current.video.width = videoWidth;\n      webcamRef.current.video.height = videoHeight; // Set canvas width\n\n      canvasRef.current.width = videoWidth;\n      canvasRef.current.height = videoHeight; // Make Detections\n      // webcam으로 부터 받은 video 정보를 인자로 넘긴다.\n\n      const face = await net.estimateFaces({\n        input: video\n      });\n      console.log(face); // Get canvas context\n      // 얼굴에 선과 점을 그린다.\n\n      const ctx = canvasRef.current.getContext(\"2d\");\n      requestAnimationFrame(() => {\n        drawMesh(face, ctx);\n      });\n    }\n  };\n\n  useEffect(() => {\n    runFacemesh();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(Webcam, {\n        ref: webcamRef,\n        style: {\n          position: \"absolute\",\n          marginLeft: \"auto\",\n          marginRight: \"auto\",\n          left: 0,\n          right: 0,\n          textAlign: \"center\",\n          zindex: 9,\n          width: 640,\n          height: 480\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n        ref: canvasRef,\n        style: {\n          position: \"absolute\",\n          marginLeft: \"auto\",\n          marginRight: \"auto\",\n          left: 0,\n          right: 0,\n          textAlign: \"center\",\n          zindex: 9,\n          width: 640,\n          height: 480\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"v4cpjlVQ0JCDZnPWaD3Z9DHNiTM=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/jobgs/face-landmarks-detection/src/App.js"],"names":["React","useRef","useEffect","tf","facemesh","Webcam","drawMesh","App","webcamRef","canvasRef","runFacemesh","net","load","SupportedPackages","mediapipeFacemesh","setInterval","detect","current","video","readyState","videoWidth","videoHeight","width","height","face","estimateFaces","input","console","log","ctx","getContext","requestAnimationFrame","position","marginLeft","marginRight","left","right","textAlign","zindex"],"mappings":"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","sourcesContent":["// 여러 가지 참조 가능. canvas components, Webcam\nimport React, { useRef, useEffect } from \"react\";\nimport \"./App.css\";\nimport * as tf from \"@tensorflow/tfjs\";\nimport * as facemesh from \"@tensorflow-models/face-landmarks-detection\";\nimport Webcam from \"react-webcam\";\nimport { drawMesh } from \"./utilities\";\n\nfunction App() {\n  const webcamRef = useRef(null);\n  const canvasRef = useRef(null);\n\n  \n  // tensorflow.js에서 model을 load\n  const runFacemesh = async () => {\n    const net = await facemesh.load(facemesh.SupportedPackages.mediapipeFacemesh);\n    // detect fucntion 호출\n    // 10ms마다 detect function 실행\n    setInterval(() => {\n      detect(net);\n    }, 10);\n  };\n\n  // Detect function 정의\n  const detect = async (net) => {\n    // webcam이 설정되었는지 확인하는 조건문\n    if (\n      typeof webcamRef.current !== \"undefined\" &&\n      webcamRef.current !== null &&\n      webcamRef.current.video.readyState === 4\n    ) {\n      // Get Video Properties\n      const video = webcamRef.current.video;\n      const videoWidth = webcamRef.current.video.videoWidth;\n      const videoHeight = webcamRef.current.video.videoHeight;\n\n      // Set video width\n      webcamRef.current.video.width = videoWidth;\n      webcamRef.current.video.height = videoHeight;\n\n      // Set canvas width\n      canvasRef.current.width = videoWidth;\n      canvasRef.current.height = videoHeight;\n\n      // Make Detections\n       // webcam으로 부터 받은 video 정보를 인자로 넘긴다.\n      const face = await net.estimateFaces({input:video});\n      console.log(face);\n\n      // Get canvas context\n      // 얼굴에 선과 점을 그린다.\n      const ctx = canvasRef.current.getContext(\"2d\");\n      requestAnimationFrame(()=>{drawMesh(face, ctx)});\n    }\n  };\n\n  useEffect(()=>{runFacemesh()}, []);\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <Webcam\n          ref={webcamRef}\n          style={{\n            position: \"absolute\",\n            marginLeft: \"auto\",\n            marginRight: \"auto\",\n            left: 0,\n            right: 0,\n            textAlign: \"center\",\n            zindex: 9,\n            width: 640,\n            height: 480,\n          }}\n        />\n\n        <canvas\n          ref={canvasRef}\n          style={{\n            position: \"absolute\",\n            marginLeft: \"auto\",\n            marginRight: \"auto\",\n            left: 0,\n            right: 0,\n            textAlign: \"center\",\n            zindex: 9,\n            width: 640,\n            height: 480,\n          }}\n        />\n      </header>\n    </div>\n  );\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}